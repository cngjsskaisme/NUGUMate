/*
작성자 : 김택준
최초작성일 : 2019/11/20
설명 : 잠금화면 스크린
다음을 Prop으로 받겠습니다 (받는 타입은 PropTypes에서 기술) :
    안받음
*/

import React, { Component } from 'react';
import { StyleSheet, Text, View } from 'react-native';
import PropTypes from 'prop-types';
import PinView from 'react-native-pin-view';

class LockScreen extends Component{
    defaultProps = {
        pin : '',
        checkpin : '',
        firstAttempt : true,
        secondAttempt : false,
        setError : false,
    }

    constructor(props) {
        super(props);
        this._onComplete = this._onComplete.bind(this);
        this.state = {
            pin: '',
            checkpin: '',
            firstAttempt : true,
            secondAttempt : false,
            setError : false,
        }
    }

    _onComplete(inputtedPin, clear) {
        if (this.state.firstAttempt){
            this.setState({checkpin : inputtedPin, firstAttempt : false, secondAttempt : true})
            clear()
        }

        if (this.state.setError){
            this.setState({checkpin : inputtedPin, setError : false, secondAttempt : true})
            clear()
        }
    }

    _onCheck(inputtedPin, clear){
        if(this.state.checkpin == inputtedPin){
            console.log('Password set')
        }
        else{
            this.setState({setError : true})
            clear()
        }
    }

    _onPress(inputtedPin, clear, pressed) {
        console.log("Pressed: " + pressed);
        console.log("inputtedpin: " + inputtedPin);
    }
    render(){
        if(this.state.firstAttempt)
            return(
                <View style={{
                    flex           : 1,
                    backgroundColor: '#f1f1f1',
                    justifyContent : 'center',
                }}>
                    <Text style={{textAlign:"center"}}>
                        사용하실 비밀번호를 설정해주세요.
                    </Text>
                    <PinView
                        onPress={this._onPress}
                        onComplete={this._onComplete}
                        pinLength={4}
                    />
                </View>
            );
        if(this.state.secondAttempt){
            console.log(this.state.pin)
            return(
                <View style={{
                    flex           : 1,
                    backgroundColor: '#f1f1f1',
                    justifyContent : 'center',
                }}>
                    <Text style={{textAlign:"center"}}>
                        사용하실 비밀번호를 다시 한 번 입력해주세요.
                    </Text>
                    <PinView
                        onPress={this._onPress}
                        onComplete={this._onCheck}
                        pinLength={4}
                    />
                </View>
            )}
        
        if(this.state.setError)
        return(
            <View style={{
                flex           : 1,
                backgroundColor: '#f1f1f1',
                justifyContent : 'center',
            }}>
                <Text style={{textAlign:"center"}}>
                    입력하신 비밀번호가 같지 않습니다. 다시 입력해주세요.
                </Text>
                <PinView
                    onPress={this._onPress}
                    onComplete={this._onComplete}
                    pinLength={4}
                />
            </View>
        )
    }
}

LockScreen.propTypes = {
    name: PropTypes.string
  };

export default LockScreen;